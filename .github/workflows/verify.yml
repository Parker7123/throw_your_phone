on: push
name: Test, Build and Release apk
jobs:
  build:
    name: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.27.3
      # Run steps with continue-on-error and capture output
      - name: Run dart format
        id: dart_format
        continue-on-error: true
        run: dart format --set-exit-if-changed .

      - name: Run flutter pub get
        id: flutter_pub_get
        continue-on-error: true
        run: flutter pub get

      - name: Run flutter analyze
        id: flutter_analyze
        continue-on-error: true
        run: flutter analyze

      - name: Run flutter test
        id: flutter_test
        continue-on-error: true
        run: flutter test

#      - name: Run flutter build apk
#        id: flutter_build_apk
#        continue-on-error: true
#        run: flutter build apk --debug --split-per-abi

      - name: Run flutter build apk mock
        id: flutter_build_apk
        continue-on-error: true
        run: echo done
  # Call the custom action to generate the summary
      - name: Generate Workflow Summary
        uses: ./.github/actions/generate-summary
        with:
          dart_format_outcome: "${{ steps.dart_format.outcome }}"
          flutter_pub_get_outcome: "${{ steps.flutter_pub_get.outcome }}"
          flutter_analyze_outcome: "${{ steps.flutter_analyze.outcome }}"
          flutter_test_outcome: "${{ steps.flutter_test.outcome }}"
          flutter_build_apk_outcome: "${{ steps.flutter_build_apk.outcome }}"

      # Determine if any step failed
      - name: Determine if any step failed
        id: check_failures
        run: |
          if [[ "${{ steps.dart_format.outcome }}" != 'success' ]] || \
             [[ "${{ steps.flutter_pub_get.outcome }}" != 'success' ]] || \
             [[ "${{ steps.flutter_analyze.outcome }}" != 'success' ]] || \
             [[ "${{ steps.flutter_test.outcome }}" != 'success' ]] || \
             [[ "${{ steps.flutter_build_apk.outcome }}" != 'success' ]]; then
            echo "HAS_FAILURES=true" >> $GITHUB_ENV
          else
            echo "HAS_FAILURES=false" >> $GITHUB_ENV
          fi

      # Fail the workflow if any step failed
      - name: Fail workflow if any step failed
        if: ${{ env.HAS_FAILURES == 'true' }}
        run: |
          echo "One or more steps failed. Failing the workflow."
          exit 1

      # Push APK to Releases (only if no failures)
      - name: Push APK to Releases
        if: ${{ env.HAS_FAILURES == 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: "build/app/outputs/apk/debug/*.apk"
